#include <iostream>
#include <cstring>
using namespace std;

class Node{
	public:
		int data;
		Node* next;
		Node(int val){
			data = val;
			next = NULL;
		}
};

class SLL{
	public:
		Node* head;
		Node* tail;
		SLL(){
			head = NULL;
			tail = NULL;
		}
		void insert(int val){
        	Node* n = new Node(val);
	        if(!head){
	            head = tail = n;
	        } 
			else{
	            tail->next = n;
	            tail = n;
	        }
    	}
};

Node* reverseList(Node* head){
    Node* prev = NULL;
    Node* curr = head;
    while(curr){
        Node* nextNode = curr->next;
        curr->next = prev;
        prev = curr;
        curr = nextNode;
    }
    return prev;
}

bool checkPal(SLL list){
    if(!list.head || !list.head->next){
        return true;
    }
    Node* slow = list.head;
    Node* fast = list.head;
    while(fast->next && fast->next->next){
        slow = slow->next;
        fast = fast->next->next;
    }
    Node* secondHalf = reverseList(slow->next);
    Node* firstHalf = list.head;
    Node* tempSecond = secondHalf;
    bool isPal = true;
    while(tempSecond){
        if(firstHalf->data != tempSecond->data){
            isPal = false;
            break;
        }
        firstHalf = firstHalf->next;
        tempSecond = tempSecond->next;
    }
    slow->next = reverseList(secondHalf);
    return isPal;
}

int main(){
    SLL list;
    int i, n, val;
    cout << "Enter number of elements: ";
    cin >> n;
    cout << "Enter elements:\n";
    for(i = 0; i < n; i++){
        cin >> val;
        list.insert(val);
    }
    if(checkPal(list)){
        cout << "true\n";
    }
    else{
        cout << "false\n";
    }
	return 0;
}
