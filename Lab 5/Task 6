#include <iostream>
using namespace std;

bool isSafe(int** arr, int x, int y, int n, int** solArr){
    if(x>=0 && y>=0 && x<n && y<n && arr[x][y] == 1 && solArr[x][y] == 0){
		return true;
    }
	return false;
}

bool ratInMaze(int** arr, int x, int y, int n, int** solArr){
    if(x == n-1 && y == n-1){
        solArr[x][y] = 1;
        return true;
    }
    if(isSafe(arr, x, y, n, solArr)){
        solArr[x][y] = 1;
        if(ratInMaze(arr, x+1, y, n, solArr)){
			return true;
        }
		if(ratInMaze(arr, x, y+1, n, solArr)){
			return true;
        }
		if(ratInMaze(arr, x-1, y, n, solArr)){
			return true;
        }
		if(ratInMaze(arr, x, y-1, n, solArr)){
			return true;
        }
		solArr[x][y] = 0;
        return false;
    }
    return false;
}

int main(){
    int n, i, j;
    cout << "Enter the size of maze: ";
    cin >> n;
    int** arr = new int*[n];
    cout << "Enter matrix for the maze(1: Open Path, 0: Closed Path): " << endl;
    for(i=0;i<n;i++){
        arr[i] = new int[n];
        for(j=0;j<n;j++){
			cout << "\nRow " << i+1 << ", Column " << j+1 << ": ";
			cin >> arr[i][j];
    	}
	}
    int** solArr = new int*[n];
    for(i=0;i<n;i++){
        solArr[i] = new int[n];
        for(j=0;j<n;j++){
			solArr[i][j] = 0;
    	}
	}
    if(ratInMaze(arr, 0, 0, n, solArr)){
        for(i=0;i<n;i++){
            for(j= 0;j<n;j++){
				cout << solArr[i][j] << " ";
            }
			cout << endl;
        }
    } 
	else{
		cout << "No path found";
    }
	return 0;
}
