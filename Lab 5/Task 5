#include <iostream>
using namespace std;

bool isValid(int puzzle[9][9], int row, int col, int num){
    int i, j, x, startRow, startCol;
	for(x=0;x<9;x++){
        if(puzzle[row][x] == num || puzzle[x][col] == num){
			return false;
    	}
	}
    startRow = row - row % 3;
	startCol = col - col % 3;  
	for(i=0;i<3;i++){
        for(j=0;j<3;j++){
            if(puzzle[i + startRow][j + startCol] == num){
				return false;
        	}
		}
    }
    return true;
}

bool solveSudoku(int puzzle[9][9]){
	int row, col, num;
    for(row=0;row<9; row++){
        for(col=0;col<9;col++){
            if (puzzle[row][col] == 0) {
                for(num=1;num<=9;num++){
                    if(isValid(puzzle, row, col, num)){
                        puzzle[row][col] = num;
                        if(solveSudoku(puzzle)){
							return true;
                        }
						puzzle[row][col] = 0;
                    }
                }
                return false;
            }
        }
    }
    return true;
}

void printPuzzle(int puzzle[9][9]){
    int i, j;
	for(i=0;i<9;i++){
        for(j=0;j<9;j++){
            cout << puzzle[i][j] << " ";
        }
        cout << endl;
    }
}

int main(){
    int puzzle[9][9] = {
        {5,3,0,0,7,0,0,0,0},
        {6,0,0,1,9,5,0,0,0},
        {0,9,8,0,0,0,0,6,0},
        {8,0,0,0,6,0,0,0,3},
        {4,0,0,8,0,3,0,0,1},
        {7,0,0,0,2,0,0,0,6},
        {0,6,0,0,0,0,2,8,0},
        {0,0,0,4,1,9,0,0,5},
        {0,0,0,0,8,0,0,7,9}
    };
    if(solveSudoku(puzzle)){
		printPuzzle(puzzle);
    }
	else{
		cout << "No solution exists";
    }
	return 0;
}
